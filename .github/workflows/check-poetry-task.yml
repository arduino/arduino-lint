# Source: https://github.com/arduino/tooling-project-assets/blob/main/workflow-templates/check-poetry-task.md
name: Check Poetry

on:
  create:
  push:
    paths:
      - ".github/workflows/check-poetry-task.ya?ml"
      - "go.mod"
      - "go.sum"
      - "poetry.lock"
      - "pyproject.toml"
      - "Taskfile.ya?ml"
  pull_request:
    paths:
      - ".github/workflows/check-poetry-task.ya?ml"
      - "go.mod"
      - "go.sum"
      - "poetry.lock"
      - "pyproject.toml"
      - "Taskfile.ya?ml"
  schedule:
    # Run periodically to catch breakage caused by external changes.
    - cron: "0 11 * * THU"
  workflow_dispatch:
  repository_dispatch:

jobs:
  run-determination:
    runs-on: ubuntu-latest
    permissions: {}
    outputs:
      result: ${{ steps.determination.outputs.result }}
    steps:
      - name: Determine if the rest of the workflow should run
        id: determination
        run: |
          RELEASE_BRANCH_REGEX="^refs/heads/((v[0-9]+)|([0-9]+\.[0-9]+\.x))$"
          # The `create` event trigger doesn't support `branches` filters, so it's necessary to use Bash instead.
          if [[
            "${{ github.event_name }}" != "create" ||
            "${{ github.ref }}" =~ $RELEASE_BRANCH_REGEX
          ]]; then
            # Run the other jobs.
            RESULT="true"
          else
            # There is no need to run the other jobs.
            RESULT="false"
          fi

          echo "result=$RESULT" >>$GITHUB_OUTPUT

  validate:
    needs: run-determination
    if: needs.run-determination.outputs.result == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: 3.x

      - name: Validate configuration
        run: |
          task \
            --silent \
            poetry:validate

  check-sync:
    needs: run-determination
    if: needs.run-determination.outputs.result == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: 3.x

      - name: Sync lockfile
        run: |
          task \
            --silent \
            poetry:sync

      - name: Check if lockfile was out of sync
        run: |
          git diff \
            --color \
            --exit-code \
            poetry.lock
