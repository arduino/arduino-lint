# Source: https://github.com/arduino/tooling-project-assets/blob/main/workflow-templates/deploy-cobra-mkdocs-versioned-poetry.md
name: Deploy Website

on:
  push:
    branches:
      # Branch to base "dev" website on. Set in siteversion.py also.
      - main
      # Release branches have names like 0.8.x, 0.9.x, ...
      - "[0-9]+.[0-9]+.x"
    paths:
      - "docs/**"
      - ".github/workflows/deploy-cobra-mkdocs-versioned-poetry.ya?ml"
      - "**/.npmrc"
      - "go.mod"
      - "go.sum"
      - "Taskfile.ya?ml"
      - "**.go"
      - "docsgen/**"
      - "ruledocsgen/**"
      - "mkdocs.ya?ml"
      - "package.json"
      - "package-lock.json"
      - "poetry.lock"
      - "pyproject.toml"
  # Run on branch or tag creation (will be filtered by the publish-determination job).
  create:

jobs:
  publish-determination:
    runs-on: ubuntu-latest
    permissions: {}
    outputs:
      result: ${{ steps.determination.outputs.result }}
    steps:
      - name: Determine if documentation should be published on this workflow run
        id: determination
        run: |
          RELEASE_BRANCH_REGEX="refs/heads/[0-9]+.[0-9]+.x"
          if [[
            "${{ github.event_name }}" == "push" ||
            (
              "${{ github.event_name }}" == "create" &&
              "${{ github.ref }}" =~ $RELEASE_BRANCH_REGEX
            )
          ]]; then
            RESULT="true"
          else
            RESULT="false"
          fi

          echo "result=$RESULT" >>$GITHUB_OUTPUT

  publish:
    runs-on: ubuntu-latest
    needs: publish-determination
    if: needs.publish-determination.outputs.result == 'true'
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod

      - name: Install Python
        uses: actions/setup-python@v6
        with:
          python-version-file: pyproject.toml

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: 3.x

      - name: Create all generated documentation content
        run: task docs:generate

      - name: Install Dependencies
        run: |
          task poetry:install-deps \
            POETRY_GROUPS=dev

      - name: Determine versioning parameters
        id: determine-versioning
        run: echo "data=$(poetry run python docs/siteversion/siteversion.py)" >>$GITHUB_OUTPUT

      - name: Publish documentation
        if: fromJson(steps.determine-versioning.outputs.data).version != null
        run: |
          # Publishing implies creating a git commit on the gh-pages branch, we let @ArduinoBot own these commits.
          git config \
            --global \
            user.email "bot@arduino.cc"

          git config \
            --global \
            user.name "ArduinoBot"

          git fetch \
            --no-tags \
            --prune \
            --depth=1 \
            origin \
            +refs/heads/gh-pages:refs/remotes/origin/gh-pages

          poetry run \
            mike deploy \
              --update-aliases \
              --push \
              --remote origin \
              ${{ fromJson(steps.determine-versioning.outputs.data).version }} \
              ${{ fromJson(steps.determine-versioning.outputs.data).alias }}
